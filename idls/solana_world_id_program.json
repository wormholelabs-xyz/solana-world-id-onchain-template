{
	"address": "9QwAWx3TKg4CaTjHNhBefQeNSzEKDe2JDxL46F76tVDv",
	"metadata": {
	  "name": "solana_world_id_program",
	  "version": "0.1.0",
	  "spec": "0.1.0",
	  "description": "Created with Anchor"
	},
	"instructions": [
	  {
		"name": "claim_ownership",
		"discriminator": [
		  236,
		  166,
		  239,
		  222,
		  14,
		  45,
		  143,
		  254
		],
		"accounts": [
		  {
			"name": "config",
			"writable": true,
			"pda": {
			  "seeds": [
				{
				  "kind": "const",
				  "value": [
					67,
					111,
					110,
					102,
					105,
					103
				  ]
				}
			  ]
			}
		  },
		  {
			"name": "upgrade_lock",
			"pda": {
			  "seeds": [
				{
				  "kind": "const",
				  "value": [
					117,
					112,
					103,
					114,
					97,
					100,
					101,
					95,
					108,
					111,
					99,
					107
				  ]
				}
			  ]
			}
		  },
		  {
			"name": "new_owner",
			"signer": true
		  },
		  {
			"name": "program_data",
			"writable": true,
			"pda": {
			  "seeds": [
				{
				  "kind": "const",
				  "value": [
					124,
					255,
					24,
					248,
					7,
					150,
					208,
					255,
					225,
					244,
					56,
					157,
					121,
					39,
					45,
					3,
					230,
					56,
					4,
					46,
					37,
					39,
					124,
					197,
					125,
					184,
					111,
					162,
					164,
					27,
					84,
					229
				  ]
				}
			  ]
			}
		  },
		  {
			"name": "bpf_loader_upgradeable_program",
			"address": "BPFLoaderUpgradeab1e11111111111111111111111"
		  }
		],
		"args": []
	  },
	  {
		"name": "clean_up_root",
		"discriminator": [
		  106,
		  202,
		  208,
		  50,
		  239,
		  7,
		  142,
		  41
		],
		"accounts": [
		  {
			"name": "root",
			"writable": true,
			"pda": {
			  "seeds": [
				{
				  "kind": "const",
				  "value": [
					82,
					111,
					111,
					116
				  ]
				},
				{
				  "kind": "arg",
				  "path": "root_hash"
				},
				{
				  "kind": "arg",
				  "path": "verification_type"
				}
			  ]
			}
		  },
		  {
			"name": "refund_recipient",
			"relations": [
			  "root"
			]
		  }
		],
		"args": [
		  {
			"name": "root_hash",
			"type": {
			  "array": [
				"u8",
				32
			  ]
			}
		  },
		  {
			"name": "verification_type",
			"type": {
			  "array": [
				"u8",
				1
			  ]
			}
		  }
		]
	  },
	  {
		"name": "initialize",
		"discriminator": [
		  175,
		  175,
		  109,
		  31,
		  13,
		  152,
		  155,
		  237
		],
		"accounts": [
		  {
			"name": "payer",
			"writable": true,
			"signer": true
		  },
		  {
			"name": "deployer",
			"signer": true
		  },
		  {
			"name": "program_data",
			"pda": {
			  "seeds": [
				{
				  "kind": "const",
				  "value": [
					124,
					255,
					24,
					248,
					7,
					150,
					208,
					255,
					225,
					244,
					56,
					157,
					121,
					39,
					45,
					3,
					230,
					56,
					4,
					46,
					37,
					39,
					124,
					197,
					125,
					184,
					111,
					162,
					164,
					27,
					84,
					229
				  ]
				}
			  ]
			}
		  },
		  {
			"name": "config",
			"writable": true,
			"pda": {
			  "seeds": [
				{
				  "kind": "const",
				  "value": [
					67,
					111,
					110,
					102,
					105,
					103
				  ]
				}
			  ]
			}
		  },
		  {
			"name": "latest_root",
			"writable": true,
			"pda": {
			  "seeds": [
				{
				  "kind": "const",
				  "value": [
					76,
					97,
					116,
					101,
					115,
					116,
					82,
					111,
					111,
					116
				  ]
				},
				{
				  "kind": "const",
				  "value": [
					0
				  ]
				}
			  ]
			}
		  },
		  {
			"name": "system_program",
			"address": "11111111111111111111111111111111"
		  }
		],
		"args": [
		  {
			"name": "args",
			"type": {
			  "defined": {
				"name": "InitializeArgs"
			  }
			}
		  }
		]
	  },
	  {
		"name": "set_allowed_update_staleness",
		"discriminator": [
		  97,
		  49,
		  167,
		  77,
		  179,
		  25,
		  243,
		  144
		],
		"accounts": [
		  {
			"name": "owner",
			"signer": true,
			"relations": [
			  "config"
			]
		  },
		  {
			"name": "config",
			"writable": true,
			"pda": {
			  "seeds": [
				{
				  "kind": "const",
				  "value": [
					67,
					111,
					110,
					102,
					105,
					103
				  ]
				}
			  ]
			}
		  }
		],
		"args": [
		  {
			"name": "allowed_update_staleness",
			"type": "u64"
		  }
		]
	  },
	  {
		"name": "set_root_expiry",
		"discriminator": [
		  2,
		  27,
		  190,
		  61,
		  106,
		  232,
		  172,
		  222
		],
		"accounts": [
		  {
			"name": "owner",
			"signer": true,
			"relations": [
			  "config"
			]
		  },
		  {
			"name": "config",
			"writable": true,
			"pda": {
			  "seeds": [
				{
				  "kind": "const",
				  "value": [
					67,
					111,
					110,
					102,
					105,
					103
				  ]
				}
			  ]
			}
		  }
		],
		"args": [
		  {
			"name": "root_expiry",
			"type": "u64"
		  }
		]
	  },
	  {
		"name": "transfer_ownership",
		"discriminator": [
		  65,
		  177,
		  215,
		  73,
		  53,
		  45,
		  99,
		  47
		],
		"accounts": [
		  {
			"name": "config",
			"writable": true,
			"pda": {
			  "seeds": [
				{
				  "kind": "const",
				  "value": [
					67,
					111,
					110,
					102,
					105,
					103
				  ]
				}
			  ]
			}
		  },
		  {
			"name": "owner",
			"signer": true,
			"relations": [
			  "config"
			]
		  },
		  {
			"name": "new_owner"
		  },
		  {
			"name": "upgrade_lock",
			"pda": {
			  "seeds": [
				{
				  "kind": "const",
				  "value": [
					117,
					112,
					103,
					114,
					97,
					100,
					101,
					95,
					108,
					111,
					99,
					107
				  ]
				}
			  ]
			}
		  },
		  {
			"name": "program_data",
			"writable": true,
			"pda": {
			  "seeds": [
				{
				  "kind": "const",
				  "value": [
					124,
					255,
					24,
					248,
					7,
					150,
					208,
					255,
					225,
					244,
					56,
					157,
					121,
					39,
					45,
					3,
					230,
					56,
					4,
					46,
					37,
					39,
					124,
					197,
					125,
					184,
					111,
					162,
					164,
					27,
					84,
					229
				  ]
				}
			  ]
			}
		  },
		  {
			"name": "bpf_loader_upgradeable_program",
			"address": "BPFLoaderUpgradeab1e11111111111111111111111"
		  }
		],
		"args": []
	  },
	  {
		"name": "update_root_expiry",
		"discriminator": [
		  29,
		  1,
		  240,
		  153,
		  210,
		  4,
		  145,
		  47
		],
		"accounts": [
		  {
			"name": "root",
			"writable": true,
			"pda": {
			  "seeds": [
				{
				  "kind": "const",
				  "value": [
					82,
					111,
					111,
					116
				  ]
				},
				{
				  "kind": "arg",
				  "path": "root_hash"
				},
				{
				  "kind": "arg",
				  "path": "verification_type"
				}
			  ]
			}
		  },
		  {
			"name": "config",
			"pda": {
			  "seeds": [
				{
				  "kind": "const",
				  "value": [
					67,
					111,
					110,
					102,
					105,
					103
				  ]
				}
			  ]
			}
		  }
		],
		"args": [
		  {
			"name": "root_hash",
			"type": {
			  "array": [
				"u8",
				32
			  ]
			}
		  },
		  {
			"name": "verification_type",
			"type": {
			  "array": [
				"u8",
				1
			  ]
			}
		  }
		]
	  },
	  {
		"name": "update_root_with_query",
		"discriminator": [
		  137,
		  107,
		  96,
		  126,
		  245,
		  99,
		  23,
		  201
		],
		"accounts": [
		  {
			"name": "payer",
			"writable": true,
			"signer": true
		  },
		  {
			"name": "guardian_set",
			"docs": [
			  "Guardian set used for signature verification (whose index should agree with the signature",
			  "set account's guardian set index)."
			],
			"pda": {
			  "seeds": [
				{
				  "kind": "const",
				  "value": [
					71,
					117,
					97,
					114,
					100,
					105,
					97,
					110,
					83,
					101,
					116
				  ]
				},
				{
				  "kind": "account",
				  "path": "signature_set.guardian_set_index",
				  "account": "QuerySignatureSet"
				}
			  ],
			  "program": {
				"kind": "const",
				"value": [
				  14,
				  10,
				  88,
				  154,
				  65,
				  165,
				  95,
				  189,
				  102,
				  197,
				  42,
				  71,
				  95,
				  45,
				  146,
				  166,
				  211,
				  220,
				  155,
				  71,
				  71,
				  17,
				  76,
				  185,
				  175,
				  130,
				  90,
				  152,
				  181,
				  69,
				  211,
				  206
				]
			  }
			}
		  },
		  {
			"name": "signature_set",
			"docs": [
			  "Stores signature validation from Sig Verify native program.",
			  "TODO: does this need to have an owner defined? maybe yes after moving to a separate crate"
			],
			"writable": true
		  },
		  {
			"name": "root",
			"writable": true,
			"pda": {
			  "seeds": [
				{
				  "kind": "const",
				  "value": [
					82,
					111,
					111,
					116
				  ]
				},
				{
				  "kind": "arg",
				  "path": "root_hash"
				},
				{
				  "kind": "const",
				  "value": [
					0
				  ]
				}
			  ]
			}
		  },
		  {
			"name": "latest_root",
			"writable": true,
			"pda": {
			  "seeds": [
				{
				  "kind": "const",
				  "value": [
					76,
					97,
					116,
					101,
					115,
					116,
					82,
					111,
					111,
					116
				  ]
				},
				{
				  "kind": "const",
				  "value": [
					0
				  ]
				}
			  ]
			}
		  },
		  {
			"name": "config",
			"pda": {
			  "seeds": [
				{
				  "kind": "const",
				  "value": [
					67,
					111,
					110,
					102,
					105,
					103
				  ]
				}
			  ]
			}
		  },
		  {
			"name": "refund_recipient",
			"relations": [
			  "signature_set"
			]
		  },
		  {
			"name": "system_program",
			"address": "11111111111111111111111111111111"
		  }
		],
		"args": [
		  {
			"name": "bytes",
			"type": "bytes"
		  },
		  {
			"name": "root_hash",
			"type": {
			  "array": [
				"u8",
				32
			  ]
			}
		  }
		]
	  },
	  {
		"name": "verify_groth16_proof",
		"discriminator": [
		  54,
		  190,
		  59,
		  14,
		  54,
		  75,
		  155,
		  6
		],
		"accounts": [
		  {
			"name": "root",
			"pda": {
			  "seeds": [
				{
				  "kind": "const",
				  "value": [
					82,
					111,
					111,
					116
				  ]
				},
				{
				  "kind": "arg",
				  "path": "root_hash"
				},
				{
				  "kind": "arg",
				  "path": "verification_type"
				}
			  ]
			}
		  }
		],
		"args": [
		  {
			"name": "root_hash",
			"type": {
			  "array": [
				"u8",
				32
			  ]
			}
		  },
		  {
			"name": "verification_type",
			"type": {
			  "array": [
				"u8",
				1
			  ]
			}
		  },
		  {
			"name": "signal_hash",
			"type": {
			  "array": [
				"u8",
				32
			  ]
			}
		  },
		  {
			"name": "nullifier_hash",
			"type": {
			  "array": [
				"u8",
				32
			  ]
			}
		  },
		  {
			"name": "external_nullifier_hash",
			"type": {
			  "array": [
				"u8",
				32
			  ]
			}
		  },
		  {
			"name": "proof",
			"type": {
			  "array": [
				"u8",
				256
			  ]
			}
		  }
		]
	  },
	  {
		"name": "verify_query_signatures",
		"discriminator": [
		  173,
		  196,
		  163,
		  56,
		  163,
		  66,
		  36,
		  23
		],
		"accounts": [
		  {
			"name": "payer",
			"writable": true,
			"signer": true
		  },
		  {
			"name": "guardian_set",
			"docs": [
			  "The wormhole guardian set account."
			]
		  },
		  {
			"name": "signature_set",
			"docs": [
			  "Stores signature validation from Sig Verify native program."
			],
			"writable": true,
			"signer": true
		  },
		  {
			"name": "instructions",
			"docs": [
			  "Instruction sysvar.",
			  "",
			  "precede this instruction."
			],
			"address": "Sysvar1nstructions1111111111111111111111111"
		  },
		  {
			"name": "system_program",
			"address": "11111111111111111111111111111111"
		  }
		],
		"args": [
		  {
			"name": "signer_indices",
			"type": {
			  "array": [
				"i8",
				19
			  ]
			}
		  }
		]
	  }
	],
	"accounts": [
	  {
		"name": "Config",
		"discriminator": [
		  155,
		  12,
		  170,
		  224,
		  30,
		  250,
		  204,
		  130
		]
	  },
	  {
		"name": "LatestRoot",
		"discriminator": [
		  12,
		  245,
		  231,
		  246,
		  191,
		  63,
		  169,
		  95
		]
	  },
	  {
		"name": "QuerySignatureSet",
		"discriminator": [
		  175,
		  29,
		  232,
		  228,
		  189,
		  231,
		  179,
		  12
		]
	  },
	  {
		"name": "Root",
		"discriminator": [
		  46,
		  159,
		  131,
		  37,
		  245,
		  84,
		  5,
		  9
		]
	  },
	  {
		"name": "WormholeGuardianSet",
		"discriminator": [
		  0,
		  0,
		  0,
		  0,
		  0,
		  0,
		  0,
		  0
		]
	  }
	],
	"errors": [
	  {
		"code": 6002,
		"name": "InvalidInstructionArgument",
		"msg": "InvalidInstructionArgument"
	  },
	  {
		"code": 6003,
		"name": "AccountNotZeroed",
		"msg": "AccountNotZeroed"
	  },
	  {
		"code": 6004,
		"name": "InvalidDataConversion",
		"msg": "InvalidDataConversion"
	  },
	  {
		"code": 6006,
		"name": "U64Overflow",
		"msg": "U64Overflow"
	  },
	  {
		"code": 6008,
		"name": "InvalidComputeSize",
		"msg": "InvalidComputeSize"
	  },
	  {
		"code": 6016,
		"name": "InvalidChain",
		"msg": "InvalidChain"
	  },
	  {
		"code": 6032,
		"name": "InvalidGovernanceEmitter",
		"msg": "InvalidGovernanceEmitter"
	  },
	  {
		"code": 6034,
		"name": "InvalidGovernanceAction",
		"msg": "InvalidGovernanceAction"
	  },
	  {
		"code": 6036,
		"name": "LatestGuardianSetRequired",
		"msg": "LatestGuardianSetRequired"
	  },
	  {
		"code": 6038,
		"name": "GovernanceForAnotherChain",
		"msg": "GovernanceForAnotherChain"
	  },
	  {
		"code": 6040,
		"name": "InvalidGovernanceVaa",
		"msg": "InvalidGovernanceVaa"
	  },
	  {
		"code": 6256,
		"name": "InsufficientFees",
		"msg": "InsufficientFees"
	  },
	  {
		"code": 6258,
		"name": "EmitterMismatch",
		"msg": "EmitterMismatch"
	  },
	  {
		"code": 6260,
		"name": "NotReadyForPublishing",
		"msg": "NotReadyForPublishing"
	  },
	  {
		"code": 6262,
		"name": "InvalidPreparedMessage",
		"msg": "InvalidPreparedMessage"
	  },
	  {
		"code": 6264,
		"name": "ExecutableEmitter",
		"msg": "ExecutableEmitter"
	  },
	  {
		"code": 6266,
		"name": "LegacyEmitter",
		"msg": "LegacyEmitter"
	  },
	  {
		"code": 6512,
		"name": "InvalidSignatureSet",
		"msg": "InvalidSignatureSet"
	  },
	  {
		"code": 6514,
		"name": "InvalidMessageHash",
		"msg": "InvalidMessageHash"
	  },
	  {
		"code": 6515,
		"name": "NoQuorum",
		"msg": "NoQuorum"
	  },
	  {
		"code": 6516,
		"name": "MessageMismatch",
		"msg": "MessageMismatch"
	  },
	  {
		"code": 7024,
		"name": "NotEnoughLamports",
		"msg": "NotEnoughLamports"
	  },
	  {
		"code": 7026,
		"name": "InvalidFeeRecipient",
		"msg": "InvalidFeeRecipient"
	  },
	  {
		"code": 7280,
		"name": "ImplementationMismatch",
		"msg": "ImplementationMismatch"
	  },
	  {
		"code": 7536,
		"name": "InvalidGuardianSetIndex",
		"msg": "InvalidGuardianSetIndex"
	  },
	  {
		"code": 7792,
		"name": "GuardianSetMismatch",
		"msg": "GuardianSetMismatch"
	  },
	  {
		"code": 7794,
		"name": "InstructionAtWrongIndex",
		"msg": "InstructionAtWrongIndex"
	  },
	  {
		"code": 7795,
		"name": "EmptySigVerifyInstruction",
		"msg": "EmptySigVerifyInstruction"
	  },
	  {
		"code": 7796,
		"name": "InvalidSigVerifyInstruction",
		"msg": "InvalidSigVerifyInstruction"
	  },
	  {
		"code": 7798,
		"name": "GuardianSetExpired",
		"msg": "GuardianSetExpired"
	  },
	  {
		"code": 7800,
		"name": "InvalidGuardianKeyRecovery",
		"msg": "InvalidGuardianKeyRecovery"
	  },
	  {
		"code": 7802,
		"name": "SignerIndicesMismatch",
		"msg": "SignerIndicesMismatch"
	  },
	  {
		"code": 8048,
		"name": "PayloadSizeMismatch",
		"msg": "PayloadSizeMismatch"
	  },
	  {
		"code": 10112,
		"name": "ZeroGuardians",
		"msg": "ZeroGuardians"
	  },
	  {
		"code": 10128,
		"name": "GuardianZeroAddress",
		"msg": "GuardianZeroAddress"
	  },
	  {
		"code": 10144,
		"name": "DuplicateGuardianAddress",
		"msg": "DuplicateGuardianAddress"
	  },
	  {
		"code": 10160,
		"name": "MessageAlreadyPublished",
		"msg": "MessageAlreadyPublished"
	  },
	  {
		"code": 10176,
		"name": "VaaWritingDisallowed",
		"msg": "VaaWritingDisallowed"
	  },
	  {
		"code": 10192,
		"name": "VaaAlreadyVerified",
		"msg": "VaaAlreadyVerified"
	  },
	  {
		"code": 10208,
		"name": "InvalidGuardianIndex",
		"msg": "InvalidGuardianIndex"
	  },
	  {
		"code": 10224,
		"name": "InvalidSignature",
		"msg": "InvalidSignature"
	  },
	  {
		"code": 10256,
		"name": "UnverifiedVaa",
		"msg": "UnverifiedVaa"
	  },
	  {
		"code": 10258,
		"name": "VaaStillProcessing",
		"msg": "VaaStillProcessing"
	  },
	  {
		"code": 10260,
		"name": "InWritingStatus",
		"msg": "InWritingStatus"
	  },
	  {
		"code": 10262,
		"name": "NotInWritingStatus",
		"msg": "NotInWritingStatus"
	  },
	  {
		"code": 10264,
		"name": "InvalidMessageStatus",
		"msg": "InvalidMessageStatus"
	  },
	  {
		"code": 10266,
		"name": "HashNotComputed",
		"msg": "HashNotComputed"
	  },
	  {
		"code": 10268,
		"name": "InvalidVaaVersion",
		"msg": "InvalidVaaVersion"
	  },
	  {
		"code": 10270,
		"name": "InvalidCreatedAccountSize",
		"msg": "InvalidCreatedAccountSize"
	  },
	  {
		"code": 10272,
		"name": "DataOverflow",
		"msg": "DataOverflow"
	  },
	  {
		"code": 10274,
		"name": "ExceedsMaxPayloadSize",
		"msg": "ExceedsMaxPayloadSize (30KB)"
	  },
	  {
		"code": 10276,
		"name": "CannotParseVaa",
		"msg": "CannotParseVaa"
	  },
	  {
		"code": 10278,
		"name": "EmitterAuthorityMismatch",
		"msg": "EmitterAuthorityMismatch"
	  },
	  {
		"code": 10280,
		"name": "InvalidProgramEmitter",
		"msg": "InvalidProgramEmitter"
	  },
	  {
		"code": 10282,
		"name": "WriteAuthorityMismatch",
		"msg": "WriteAuthorityMismatch"
	  },
	  {
		"code": 10284,
		"name": "PostedVaaPayloadTooLarge",
		"msg": "PostedVaaPayloadTooLarge"
	  },
	  {
		"code": 10286,
		"name": "ExecutableDisallowed",
		"msg": "ExecutableDisallowed"
	  },
	  {
		"code": 18288,
		"name": "FailedToParseResponse",
		"msg": "FailedToParseResponse"
	  },
	  {
		"code": 18289,
		"name": "InvalidNumberOfRequests",
		"msg": "InvalidNumberOfRequests"
	  },
	  {
		"code": 18290,
		"name": "InvalidRequestChainId",
		"msg": "InvalidRequestChainId"
	  },
	  {
		"code": 18291,
		"name": "InvalidRequestType",
		"msg": "InvalidRequestType"
	  },
	  {
		"code": 18292,
		"name": "InvalidRequestCallDataLength",
		"msg": "InvalidRequestCallDataLength"
	  },
	  {
		"code": 18293,
		"name": "InvalidRequestContract",
		"msg": "InvalidRequestContract"
	  },
	  {
		"code": 18294,
		"name": "InvalidRequestSignature",
		"msg": "InvalidRequestSignature"
	  },
	  {
		"code": 18295,
		"name": "InvalidNumberOfResponses",
		"msg": "InvalidNumberOfResponses"
	  },
	  {
		"code": 18296,
		"name": "InvalidResponseChainId",
		"msg": "InvalidResponseChainId"
	  },
	  {
		"code": 18297,
		"name": "StaleBlockNum",
		"msg": "StaleBlockNum"
	  },
	  {
		"code": 18304,
		"name": "StaleBlockTime",
		"msg": "StaleBlockTime"
	  },
	  {
		"code": 18305,
		"name": "InvalidResponseType",
		"msg": "InvalidResponseType"
	  },
	  {
		"code": 18306,
		"name": "InvalidResponseResultsLength",
		"msg": "InvalidResponseResultsLength"
	  },
	  {
		"code": 18307,
		"name": "InvalidResponseResultLength",
		"msg": "InvalidResponseResultLength"
	  },
	  {
		"code": 18308,
		"name": "RootHashMismatch",
		"msg": "RootHashMismatch"
	  },
	  {
		"code": 18309,
		"name": "NoopExpiryUpdate",
		"msg": "NoopExpiryUpdate"
	  },
	  {
		"code": 18310,
		"name": "RootUnexpired",
		"msg": "RootUnexpired"
	  },
	  {
		"code": 18311,
		"name": "RootExpired",
		"msg": "RootExpired"
	  },
	  {
		"code": 18312,
		"name": "CreateGroth16VerifierFailed",
		"msg": "CreateGroth16VerifierFailed"
	  },
	  {
		"code": 18313,
		"name": "Groth16ProofVerificationFailed",
		"msg": "Groth16ProofVerificationFailed"
	  },
	  {
		"code": 22384,
		"name": "InvalidPendingOwner",
		"msg": "InvalidPendingOwner"
	  }
	],
	"types": [
	  {
		"name": "Config",
		"type": {
		  "kind": "struct",
		  "fields": [
			{
			  "name": "bump",
			  "type": "u8"
			},
			{
			  "name": "owner",
			  "docs": [
				"Owner of the program."
			  ],
			  "type": "pubkey"
			},
			{
			  "name": "pending_owner",
			  "docs": [
				"Pending next owner (before claiming ownership)."
			  ],
			  "type": {
				"option": "pubkey"
			  }
			},
			{
			  "name": "root_expiry",
			  "docs": [
				"Time (in seconds) after which a root should be considered expired."
			  ],
			  "type": "u64"
			},
			{
			  "name": "allowed_update_staleness",
			  "docs": [
				"Time (in seconds) after which an attempted update should be rejected."
			  ],
			  "type": "u64"
			}
		  ]
		}
	  },
	  {
		"name": "InitializeArgs",
		"type": {
		  "kind": "struct",
		  "fields": [
			{
			  "name": "root_expiry",
			  "type": "u64"
			},
			{
			  "name": "allowed_update_staleness",
			  "type": "u64"
			}
		  ]
		}
	  },
	  {
		"name": "LatestRoot",
		"type": {
		  "kind": "struct",
		  "fields": [
			{
			  "name": "bump",
			  "type": "u8"
			},
			{
			  "name": "read_block_number",
			  "docs": [
				"Block number from which the root was read."
			  ],
			  "type": "u64"
			},
			{
			  "name": "read_block_hash",
			  "docs": [
				"Block hash from which the root was read."
			  ],
			  "type": {
				"array": [
				  "u8",
				  32
				]
			  }
			},
			{
			  "name": "read_block_time",
			  "docs": [
				"Block time (in microseconds) from which the root was read."
			  ],
			  "type": "u64"
			},
			{
			  "name": "root",
			  "docs": [
				"Root hash of the last posted root account."
			  ],
			  "type": {
				"array": [
				  "u8",
				  32
				]
			  }
			}
		  ]
		}
	  },
	  {
		"name": "QuerySignatureSet",
		"type": {
		  "kind": "struct",
		  "fields": [
			{
			  "name": "sig_verify_successes",
			  "docs": [
				"Verification success per guardian."
			  ],
			  "type": {
				"vec": "bool"
			  }
			},
			{
			  "name": "message",
			  "docs": [
				"35 prefix + 32 keccak(message)."
			  ],
			  "type": "bytes"
			},
			{
			  "name": "guardian_set_index",
			  "docs": [
				"Index of the guardian set."
			  ],
			  "type": "u32"
			},
			{
			  "name": "refund_recipient",
			  "docs": [
				"Payer of this signature set account, used for reimbursements upon cleanup."
			  ],
			  "type": "pubkey"
			}
		  ]
		}
	  },
	  {
		"name": "Root",
		"type": {
		  "kind": "struct",
		  "fields": [
			{
			  "name": "bump",
			  "type": "u8"
			},
			{
			  "name": "read_block_number",
			  "docs": [
				"Block number from which the root was read."
			  ],
			  "type": "u64"
			},
			{
			  "name": "read_block_hash",
			  "docs": [
				"Block hash from which the root was read."
			  ],
			  "type": {
				"array": [
				  "u8",
				  32
				]
			  }
			},
			{
			  "name": "read_block_time",
			  "docs": [
				"Block time (in microseconds) from which the root was read."
			  ],
			  "type": "u64"
			},
			{
			  "name": "expiry_time",
			  "docs": [
				"Time (in seconds) after which this root should be considered expired."
			  ],
			  "type": "u64"
			},
			{
			  "name": "refund_recipient",
			  "docs": [
				"Payer of this root account, used for reimbursements upon cleanup."
			  ],
			  "type": "pubkey"
			}
		  ]
		}
	  },
	  {
		"name": "WormholeGuardianSet",
		"type": {
		  "kind": "struct",
		  "fields": [
			{
			  "name": "index",
			  "docs": [
				"Index representing an incrementing version number for this guardian set."
			  ],
			  "type": "u32"
			},
			{
			  "name": "keys",
			  "docs": [
				"Ethereum-style public keys."
			  ],
			  "type": {
				"vec": {
				  "array": [
					"u8",
					20
				  ]
				}
			  }
			},
			{
			  "name": "creation_time",
			  "docs": [
				"Timestamp representing the time this guardian became active."
			  ],
			  "type": "u32"
			},
			{
			  "name": "expiration_time",
			  "docs": [
				"Expiration time when VAAs issued by this set are no longer valid."
			  ],
			  "type": "u32"
			}
		  ]
		}
	  }
	]
  }
  